<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_main_idle_rt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Near's global variables

// The character's full name.
global.fname = "Jada"
global.mname = "Jazmin"
global.lname = "Jones"

// Print the character's name to the console upon char creation.
show_debug_message(global.fname + " " + global.mname + " " + global.lname);

// Fix char so it doesn't rotate when it hits corners.
phy_fixed_rotation = true;

// Set a speed that can be changed throughout the game.
// Used for character movement speed.
spd = 7;

// Used for the speed at which the animation will run.
img_spd = .1;

// Set image speed to 10% of the room speed.
image_speed = .1;

// Index of the sprite used for this object.
currIndex = spr_main_idle_rt;

sprite_index = spr_main_idle_rt;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the character

if (keyboard_check_pressed(vk_left)) {
    currIndex = spr_main_idle_lt;
    sprite_index = spr_main_idle_lt;
    spd = -6;
}

else if (keyboard_check_pressed(vk_right)) {
    currIndex = spr_main_idle_rt;
    sprite_index = spr_main_idle_rt;
    spd = 6;
}

else if (! (keyboard_check(vk_left) || keyboard_check(vk_right))) {
    spd = 0;
}

/*if (keyboard_check_pressed(vk_space)) {
    if (currIndex == spr_main_idle_rt) {
        spd = 0;
        sprite_index = spr_main_punch_atk_rt;
    }
    else if (currIndex == spr_main_idle_lt) {
        spd = 0;
        sprite_index = spr_main_punch_atk_lt;
    }
}*/

if (spd &lt; 0) {
   currIndex = spr_main_idle_lt;
   sprite_index = spr_main_run_lt;
   phy_position_x+=spd;
}

else if (spd &gt; 0){
   currIndex = spr_main_idle_rt;
   sprite_index = spr_main_run_rt;
   phy_position_x+=spd;
}

else {
    sprite_index = currIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_camera">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide!

phy_fixed_rotation = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collisioner">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide!
phy_fixed_rotation = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>67,82</point>
    <point>28,80</point>
  </PhysicsShapePoints>
</object>
